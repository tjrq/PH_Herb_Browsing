---
title: "benthic_cover_fit"
format: html
editor: visual
---

# glimpse

```{r}
glimpse(mbc_v2)
```

# CORAL MODEL

```{r}
coral_form <- bf(Coral | trials(Total_points) ~ 
                Depth_band +
                (1 | Site),
              family = binomial(link = "logit"))
```

## View data

```{r}
mbc_v2 |> group_by(Depth_band, 
                   Site) |> 
  summarise(median = median(qlogis(Coral / Total_points)),
            mad = mad(qlogis(Coral / Total_points)),
            N = mean(Total_points))
```

## Weakly informative priors

```{r}
coral_priors <- prior(normal(-1.4, 3), class = "Intercept") + # tried mad = 3
  prior(normal(0, 2), class = "b") +
  prior(student_t(3, 0, 3), class = "sd")
```

## Prior only model

```{r}
#| cache: true
coral_prior_mod <- brm(coral_form,
                    data = mbc_v2,
                    prior = coral_priors,
                    sample_prior = "only",
                    iter = 5000,
                    warmup = 1000,
                    chains = 3,
                    cores = 6,
                    thin = 5,
                    refresh = 1000)
```

## examine prior model

```{r}
coral_prior_mod |> 
  conditional_effects(conditions = data.frame(Total_points = 25)) |> 
  plot(points = TRUE)
```

## fit data to model

```{r}
#| cache: true
coral_mod <- update(coral_prior_mod,
                   sample_prior = "yes",
                   iter = 10000,
                   warmup = 2000,
                   refresh = 1000,
                    control = list(adapt_delta = 0.99,
                                   max_treedepth = 20))
```

## chain diagnostics

```{r}
# trace
coral_mod |> mcmc_plot(type = "trace")
# autocor
coral_mod |> mcmc_plot(type = "acf_bar")
# rhat
coral_mod |> mcmc_plot(type = "rhat_hist")
# ess
coral_mod |> mcmc_plot(type = "neff_hist")
```

## model residuals

```{r}
coral_resids <- make_brms_dharma_res(coral_mod)
# qqplot
coral_resids |> testUniformity()
# residual plot
coral_resids |> plotResiduals(quantreg = FALSE)
```

# MACROALGAE MODEL

```{r}
macroalgae_form <- bf(Macroalgae | trials(Total_points) ~ 
                Depth_band +
                (1 | Site),
              family = binomial(link = "logit"))
```

## View data

```{r}
mbc_v2 |> group_by(Depth_band, 
                   Site) |> 
  summarise(median = median(qlogis(Macroalgae / Total_points)),
            mad = mad(qlogis(Macroalgae / Total_points)),
            N = mean(Total_points))
```

## Weakly informative priors

```{r}
ma_priors <- prior(normal(-1.8, 1.5), class = "Intercept") + # tried mad = 3
  prior(normal(0, 2.4), class = "b") +
  prior(student_t(3, 0, 1.5), class = "sd")
```

## Prior only model

```{r}
#| cache: true
ma_prior_mod <- brm(macroalgae_form,
                    data = mbc_v2,
                    prior = ma_priors,
                    sample_prior = "only",
                    iter = 5000,
                    warmup = 1000,
                    chains = 3,
                    cores = 6,
                    thin = 5,
                    refresh = 1000)
```

## examine prior model

```{r}
ma_prior_mod |> 
  conditional_effects(conditions = data.frame(Total_points = 25)) |> 
  plot(points = TRUE)
```

## fit data to model

```{r}
#| cache: true
ma_mod <- update(ma_prior_mod,
                   sample_prior = "yes",
                   iter = 10000,
                   warmup = 2000,
                   refresh = 1000,
                    control = list(adapt_delta = 0.99,
                                   max_treedepth = 20))
```

## chain diagnostics

```{r}
# trace
ma_mod |> mcmc_plot(type = "trace")
# autocor
ma_mod |> mcmc_plot(type = "acf_bar")
# rhat
ma_mod|> mcmc_plot(type = "rhat_hist")
# ess
ma_mod|> mcmc_plot(type = "neff_hist")
```

## model residuals

```{r}
ma_resids <- make_brms_dharma_res(ma_mod)
# qqplot
ma_resids|> testUniformity()
# residual plot
ma_resids |> plotResiduals()
```

# TOTAL ALGAE (macroalgae + turf algae)

```{r}
ta_form <- bf(Total_algae | trials(Total_points) ~ 
                Depth_band +
                (1 | Site),
              family = binomial(link = "logit"))
```

## View data

```{r}
mbc_v2 |> group_by(Depth_band, 
                   Site) |> 
  summarise(median = median(qlogis(Total_algae / Total_points)),
            mad = mad(qlogis(Total_algae / Total_points)),
            N = mean(Total_points)) |> 
  arrange(-median)

# -1.7, 1.6
```

## Weakly informative prior

```{r}
ta_priors <- prior(normal(-1.7, 1.6), class = "Intercept") + # tried mad = 3
  prior(normal(0, 1.2), class = "b") +
  prior(student_t(3, 0, 1.6), class = "sd")
```

## Prior only model

```{r}
#| cache: true
ta_prior_mod <- brm(ta_form,
                    data = mbc_v2,
                    prior = ta_priors,
                    sample_prior = "only",
                    iter = 5000,
                    warmup = 1000,
                    chains = 3,
                    cores = 6,
                    thin = 5,
                    refresh = 1000)
```

```{r}
ta_prior_mod |> 
  conditional_effects(conditions = data.frame(Total_points = 25)) |> 
  plot(points = TRUE)
```

## fit data to model

```{r}
#| cache: true
ta_mod <- update(ta_prior_mod,
                   sample_prior = "yes",
                   iter = 10000,
                   warmup = 2000,
                   refresh = 1000,
                    control = list(adapt_delta = 0.99,
                                   max_treedepth = 20))
```

## chain diagnostics

```{r}
# trace
ta_mod |> mcmc_plot(type = "trace")
# autocor
ta_mod |> mcmc_plot(type = "acf_bar")
# rhat
ta_mod|> mcmc_plot(type = "rhat_hist")
# ess
ta_mod|> mcmc_plot(type = "neff_hist")
```

## model residuals

```{r}
ta_resids <- make_brms_dharma_res(ta_mod)
# qqplot
ta_resids|> testUniformity()
# residual plot
ta_resids |> plotResiduals()
```
