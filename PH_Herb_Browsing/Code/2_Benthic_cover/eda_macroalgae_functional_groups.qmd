---
title: "Benthic_cover"
format: html
editor: visual
---

# Description
This qmd file runs exploratory data analysis on how macroalgae functional groups vary with increasing depth bands. 

# libraries
```{r}
#| label: libraries
#| output: false
#| eval: true
#| warning: false
#| message: false
#| cache: false

library(tidyverse)
#library(rstanarm)
library(brms)
library(coda)
library(bayesplot)
library(DHARMa)
library(emmeans)
library(broom)
library(tidybayes)
library(ggeffects)
library(broom.mixed)
library(bayestestR)
library(see)
library(easystats)
library(patchwork)
library(ggridges)
source("helperFunctions.R")
library(ggimage)
library(vegan)
library(BiodiversityR)
library(ggrepel)
```

# read data: macroalgae functional group
```{r}
m_fg <- read_csv("Data/macroalgae_functional_group.csv",
               trim_ws = TRUE)
```

# subset data of macroalgae functional group
```{r}
m_fg_v2 <- m_fg |> 
  select(Site,
         Depth,
    `Articulated calcareous (Art-cal)`: `crustose algae (CA)`,
          `Turf algae (TA)`,
    Total_points) |> 
  rename(Articulated_calcareous = `Articulated calcareous (Art-cal)`,
         Corticated = `Corticated (Cort)`,
         Corticated_foliose = `Corticated foliose (Cort-Fol)`,
         Filamentous = `Filamentous (Fila)`,
         Leathery = `Leathery (Leat)`,
         Crustose_coralline_algae = `crustose algae (CA)`,
         Turf_algae = `Turf algae (TA)`)
```

# convert to longdata frame
```{r}
m_fg_long <- 
  m_fg_v2 |> 
  pivot_longer(cols = Articulated_calcareous: Crustose_coralline_algae, 
               names_to = "Functional_group", 
               values_to = "Frequency") |> 
  mutate(Site = factor(Site),
         Depth = factor(Depth),
         Percentage = Frequency/Total_points*100) |> # convert to percentage cover 
  rename(Depth_band = Depth)
```

# formula for standard error of the mean
```{r}
se_mean <- function(x) sd(x)/sqrt(length(x))
```

# group by macroalgae functional group
```{r}
m_fg_long |> 
  group_by(Functional_group,
           Depth_band) |> 
  summarise(mean_perc = mean(Percentage),
            se_mean_perc = se_mean(Percentage),
            sd_perc = sd(Percentage)) 
```

# plot macroalgae functional groups among depth bands
```{r}
p_fg_algae <- 
m_fg_long |> 
  group_by(Functional_group,
           Depth_band) |> 
  mutate(Functional_group = recode(Functional_group,
                                   Articulated_calcareous = "Articulated calcareous",
                                   Corticated_foliose = "Corticated foliose",
                                   Crustose_coralline_algae = "Crustose coralline algae",
                                   Corticated = "Corticate terete")) |> 
  mutate(Depth_band = recode(Depth_band,
                             "10m" = "0-10m",
                             "20m" = "11-20m",
                             "30m" = "31-40m",
                             "50m" = "41-50m")) |> 
  summarise(mean_perc = mean(Percentage),
            se_mean_perc = se_mean(Percentage),
            sd_perc = sd(Percentage)) |> 
  ggplot(aes(x = Depth_band,
             y = mean_perc,
             color = Functional_group)) +
  geom_pointrange(aes(ymin = mean_perc - se_mean_perc,
                      ymax = mean_perc + se_mean_perc)) + 
  facet_wrap(~ Functional_group) +
  theme_classic() +
  scale_x_discrete(name = "Depth bands") +
  scale_y_continuous(name = "Percentage cover",
                     limits = c(0, 30),
                     breaks = seq(0, 30, by = 10)) +
  theme(legend.position = "none",
         axis.title = element_text(size = 15),
        axis.text = element_text(size = 12),
        strip.text = element_text(size = 15)) #+
  #geom_hline(yintercept = 10,
   #          linetype = "dashed",
    #         color = "red")
```

## ggsave image
```{r}
ggsave("Plots/Fig. SX. macroalgae_functional_group.jpeg",
       plot = p_fg_algae, 
       dpi = 600, 
       height = 6, 
       width = 9.5, 
       units = "in")
```

### end