---
title: "sarg_assay_binomial_fit"
format: html
editor: visual
---

# Description

This qmd examines differences in Sargassum mass loss among depth bands for the 4day and 3 day experiments.

# libraries

```{r}
#| label: libraries
#| output: false
#| eval: true
#| warning: false
#| message: false
#| cache: false

library(tidyverse)
#library(rstanarm)
library(brms)
library(coda)
library(bayesplot)
library(DHARMa)
library(emmeans)
library(broom)
library(tidybayes)
library(ggeffects)
library(broom.mixed)
library(bayestestR)
library(see)
library(easystats)
library(patchwork)
library(ggridges)
source("helperFunctions.R")
library(ggimage)
library(vegan)
library(BiodiversityR)
library(ggrepel)
set.seed(123)
```

# read csv

```{r}
sarg_assay <- read_csv("Data/sarg_assays.csv",
               trim_ws = TRUE)
```

# eda: statistics for mean weight and height

```{r}
# sem formula
se_mean <- function(x) sd(x)/sqrt(length(x))

# summary table
sarg_assay |> 
  group_by(Depth_band) |> 
  summarise(mean_weight = mean(Initial_weight_g),
            se_weight = se_mean(Initial_weight_g),
            mean_height = mean(Initial_height_cm),
            se_height = se_mean(Initial_height_cm),
            min_height = min(Initial_height_cm),
            max_height = max(Initial_height_cm))
```

# data prep: subset 96h deployment

```{r}
sarg_assay_96h <- 
  sarg_assay |> 
  filter(Hours_deployed == "96") |> 
  select(Site,
         Depth_band,
         Treatment,
         Initial_weight_g,
         Final_weight_g,
         Weight_removed_g) |> 
  mutate(Site = factor(Site),
         Depth_band = factor(Depth_band)) |> 
  mutate(Depth_band = recode(Depth_band,
                             "10" = "10m",
                             "20" = "20m",
                             "30" = "30m",
                             "50" = "50m"))
```

# MODEL for 4 day experiment

## formula

```{r}
logm_sarg_96h_form <- bf(Weight_removed_g ~ 
                      Depth_band *
                      Treatment +
                      (1 | Site),
                    family = hurdle_lognormal())
```

## get prior

```{r}
get_prior(logm_sarg_96h_form, data = sarg_assay_96h)
# b, hu, Intercept, sd, sigma
```

## examine data

```{r}
sarg_assay_96h |> 
  group_by(Depth_band) |> 
  summarise(log_med = median(log(Weight_removed_g)),
            log_mad = mad(log(Weight_removed_g)))
```

## weakly informative priors

```{r}
logm_prior_sarg_assay_96h <- prior(normal(2.7, 1.4), class = "Intercept") +
  prior(normal(0, 0.2), class = "b") +
  prior(student_t(3, 0, 1.4), class = "sd") +
  prior(student_t(3, 0, 1.4), class = "sigma") +
  prior(beta(1, 1), class = "hu")
```

## prior model

```{r}
#| cache: true
logm_sarg96_prior_mod <- brm(logm_sarg_96h_form,
                    data = sarg_assay_96h,
                    prior = logm_prior_sarg_assay_96h,
                    sample_prior = "only",
                    iter = 5000,
                    warmup = 1000,
                    chains = 3,
                    cores = 6,
                    thin = 5,
                    refresh = 1000,
                    seed = 123,
                    control = list(adapt_delta = 0.99,
                                   max_treedepth = 20))
```

## fit data to model

```{r}
#| cache: true
logm_sarg96_mod <- update(logm_sarg96_prior_mod,
                   sample_prior = "yes",
                   iter = 10000,
                   warmup = 2000,
                   refresh = 1000)
```

### chain checks

```{r}
# trace
logm_sarg96_mod |> mcmc_plot(type = "trace")
# autocor
logm_sarg96_mod |> mcmc_plot(type = "acf_bar")
# rhat
logm_sarg96_mod |> mcmc_plot(type = "rhat_hist")
# ess
logm_sarg96_mod |> mcmc_plot(type = "neff_hist")
```

### residuals

```{r}
logm_sarg96_resids <- make_brms_dharma_res(logm_sarg96_mod)
# qqplot
logm_sarg96_resids  |> testUniformity() # normality good
# residual plot
logm_sarg96_resids |> plotResiduals()
```

#### save model

```{r}
save(logm_sarg96_mod, file = "Model_Outputs/logm_sarg96_mod.Rdata")
```

# MODEL for 3h experiment

## data prep: subset 3h data

```{r}
sarg_assay_3h <- 
  sarg_assay |> 
  filter(Hours_deployed == "3") |> 
  select(Site,
         Depth_band,
         Treatment,
         Initial_weight_g,
         Final_weight_g,
         Weight_removed_g) |> 
  mutate(Depth_band = recode(Depth_band,
                             "10" = "0-10m",
                             "20" = "11-20m",
                             "30" = "30-40m",
                             "50" = "41-50m")) |> 
  mutate(Depth_band = factor(Depth_band))
```

### formula

```{r}
logm_sarg_3h_form <- bf(Weight_removed_g ~ 
                      Depth_band *
                      Treatment +
                      (1 | Site),
                    family = hurdle_lognormal())
```

### examine data

```{r}
sarg_assay_3h |> 
  group_by(Depth_band) |> 
  summarise(log_med = median(log(Weight_removed_g)),
            log_mad = mad(log(Weight_removed_g)))
```

### weakly informative priors

```{r}
logm_prior_sarg_assay_3h <- prior(normal(1.4, 1.3), class = "Intercept") +
  prior(normal(0, 0.3), class = "b") +
  prior(student_t(3, 0, 0.6), class = "sd") +
  prior(student_t(3, 0, 0.6), class = "sigma") +
  prior(beta(1, 1), class = "hu")
```

### prior model

```{r}
#| cache: true
logm_sarg3h_prior_mod <- brm(logm_sarg_3h_form,
                    data = sarg_assay_3h,
                    prior = logm_prior_sarg_assay_3h,
                    sample_prior = "only",
                    iter = 5000,
                    warmup = 1000,
                    chains = 3,
                    cores = 6,
                    thin = 5,
                    refresh = 1000,
                    seed = 123,
                    control = list(adapt_delta = 0.99,
                                   max_treedepth = 20))
```

### fit data to model

```{r}
#| cache: true
logm_sarg3h_mod <- update(logm_sarg3h_prior_mod,
                   sample_prior = "yes",
                   iter = 10000,
                   warmup = 2000,
                   refresh = 1000)
```

#### chain checks

```{r}
# trace
logm_sarg3h_mod |> mcmc_plot(type = "trace")
# autocor
logm_sarg3h_mod |> mcmc_plot(type = "acf_bar")
# rhat
logm_sarg3h_mod |> mcmc_plot(type = "rhat_hist")
# ess
logm_sarg3h_mod |> mcmc_plot(type = "neff_hist")
```

#### residuals

```{r}
logm_sarg3h_resids <- make_brms_dharma_res(logm_sarg3h_mod)
# qqplot
logm_sarg3h_resids  |> testUniformity() # normality good
# residual plot
logm_sarg3h_resids |> plotResiduals()
```

##### save model

```{r}
save(logm_sarg3h_mod, file = "Model_Outputs/logm_sarg3h_mod.RData")
```

###### end
