---
title: "length_fits"
format: html
editor: visual
---

# libraries

```{r}
#| label: libraries
#| output: false
#| eval: true
#| warning: false
#| message: false
#| cache: false

library(tidyverse)
#library(rstanarm)
library(brms)
library(coda)
library(bayesplot)
library(DHARMa)
library(emmeans)
library(broom)
library(tidybayes)
library(ggeffects)
library(broom.mixed)
library(bayestestR)
library(see)
library(easystats)
library(patchwork)
library(ggridges)
source("helperFunctions.R")
library(ggimage)
library(vegan)
library(BiodiversityR)
library(ggrepel)
```

# read csv

```{r}
brow_length <- read_csv("Data/total_length_cm.csv",
               trim_ws = TRUE)

glimpse(brow_length)
```

# prep data

```{r}
brow_length_v2 <-
  brow_length |> 
  select(Site,
         Depth_band,
         Species,
         Size_cm) |> 
  mutate(Site = factor(Site),
         Depth_band = factor(Depth_band)) |> 
  mutate(Depth_band = recode(Depth_band,
                             "10" = "10m",
                             "20" = "20m",
                             "30" = "30m",
                             "50" = "50m"))

#hist(brow_length_v2$Size_cm)
```

# Hurdle lognormal model

# formula

```{r}
log_length_form <- 
  bf(Size_cm ~ Depth_band +
       (1 | Site), 
     family = hurdle_lognormal())
```

# explore data

```{r}
brow_length_v2 |> 
  group_by(Depth_band) |> 
  summarise(median = log(median(Size_cm)),
            mad = log(mad(Size_cm)))

#View(brow_length_v2)
```

# get priors

```{r}
get_prior(log_length_form, data = brow_length_v2)
```


# define priors

```{r}
log_length_priors <- prior(normal(2.7, 1.2), class = "Intercept") +
  prior(normal(0, 1), class = "b") +
  prior(student_t(3, 0, 1.2), class = "sigma") +
  prior(student_t(3, 0, 1.2), class = "sd") +
  prior(beta(1, 1), class = "hu")
```

# prior mod

```{r}
#| cache: true
log_length_prio_mod <- brm(log_length_form,
                    data = brow_length_v2,
                    prior = log_length_priors,
                    sample_prior = "only",
                    iter = 5000,
                    warmup = 1000,
                    chains = 3,
                    cores = 6,
                    thin = 5,
                    refresh = 1000,
                    control = list(adapt_delta = 0.99,
                                   max_treedepth = 20))
```

# eval prior mod

```{r}
log_length_prio_mod |> conditional_effects() |> 
  plot(points = TRUE,
       ask = FALSE,
       plot = FALSE) |> 
  wrap_plots()  &
  scale_y_log10()
```

# fit data to model

```{r}
#| cache: true
log_length_mod <- update(log_length_prio_mod,
                   sample_prior = "yes",
                   iter = 10000,
                   warmup = 2000,
                   #control = list(adapt_delta = 0.99,
                    #               max_treedepth = 20),
                   refresh = 1000)
```

# chain checks

```{r}
# trace
log_length_mod |> mcmc_plot(type = "trace")
# autocor
log_length_mod |> mcmc_plot(type = "acf_bar")
# rhat
log_length_mod |> mcmc_plot(type = "rhat_hist")
# ess
log_length_mod |> mcmc_plot(type = "neff_hist")
```

# residuals

```{r}
# resids
log_length_resids <- make_brms_dharma_res(log_length_mod)
# qqplot
log_length_resids |> testUniformity() # Better than gaussian
# residual plot
log_length_resids |> plotResiduals(quantreg = FALSE)
```

# Gaussian model didn't look too good

# model formula: gaussian

```{r}
length_form <- 
  bf(Size_cm ~ Depth_band +
       (1 | Site), 
     family = gaussian())
```

# explore data

```{r}
brow_length_v2 |> 
  group_by(Depth_band) |> 
  summarise(median = median(Size_cm),
            mad = mad(Size_cm))
```

# get priors

```{r}
get_prior(length_form, data = brow_length_v2)
```


# define priors

```{r}
length_priors <- prior(normal(20, 18), class = "Intercept") +
  prior(normal(0, 10), class = "b") +
  prior(student_t(3, 0, 18), class = "sigma") +
  prior(student_t(3, 0, 18), class = "sd")
```

# prior mod

```{r}
#| cache: true
length_prio_mod <- brm(length_form,
                    data = brow_length_v2,
                    prior = length_priors,
                    sample_prior = "only",
                    iter = 5000,
                    warmup = 1000,
                    chains = 3,
                    cores = 6,
                    thin = 5,
                    refresh = 1000,
                    control = list(adapt_delta = 0.99,
                                   max_treedepth = 20))
```

# eval prior mod

```{r}
length_prio_mod |> conditional_effects() |> 
  plot(points = TRUE,
       ask = FALSE,
       plot = FALSE) |> 
  wrap_plots() # &
  #scale_y_log10()
```

# fit data to model

```{r}
#| cache: true
length_mod <- update(length_prio_mod,
                   sample_prior = "yes",
                   iter = 10000,
                   warmup = 2000,
                   #control = list(adapt_delta = 0.99,
                    #               max_treedepth = 20),
                   refresh = 1000)
```

# chain checks

```{r}
# trace
length_mod |> mcmc_plot(type = "trace")
# autocor
length_mod |> mcmc_plot(type = "acf_bar")
# rhat
length_mod |> mcmc_plot(type = "rhat_hist")
# ess
length_mod |> mcmc_plot(type = "neff_hist")
```

# residuals

```{r}
# resids
length_resids <- make_brms_dharma_res(length_mod)
# qqplot
length_resids |> testUniformity() # Could be better
# residual plot
length_resids |> plotResiduals(quantreg = FALSE)
```

