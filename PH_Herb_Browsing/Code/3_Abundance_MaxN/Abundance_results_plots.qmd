---
title: "Abundance_results_plots"
format: html
editor: visual
---

# MAXN ABUNDANCE

## Exceedence probability

```{r}
abun_mod |> as_draws_df() |> 
  dplyr::select(matches("^b_.*")) |> 
  exp() |> 
  summarise_draws(median,
                  HDInterval::hdi,
                  Pl= ~mean(.x < 1),
                  Pg = ~mean(.x > 1)) |> 
  filter(Pl > 0.85 | 
           Pg > 0.85)
```

## depth bands newdata

```{r}
abun_nd <- 
  abun_mod |> 
  emmeans(~ Depth_band, 
          type = "link") |> 
  gather_emmeans_draws() |> 
  mutate(Exp_abun = exp(.value)) |> 
  dplyr::select(-.chain,
                -.iteration,
                -.value) |> 0.
  summarise_draws(median, 
                  HDInterval::hdi) |> 
  as.data.frame()

glimpse(abun_nd)
```

## plot depth band

```{r}
p_brow_abun <- 
abun_nd |> 
  ggplot(aes(x = Depth_band,
             y = median)) +
  geom_pointrange(aes(ymin = lower,
                      ymax = upper),
                  shape = 21,
                  size = 1,
                  fatten = 3,
                  color = "#8AA17D",
                  fill = "#8AA17D") +
  scale_y_continuous(name = "Abundance (MaxN)",
                     limits = c(0, 2),
                     breaks = seq(0, 2, by = 1)) +
  scale_x_discrete(name = "") +
  theme_classic() +
    #ggtitle("Total herbivores") +
     theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.title.y = element_text(size = 15),
        axis.text.y = element_text(size = 12),
        plot.title = element_text(size = 18)) +
  geom_image(data = tibble(Depth_band = 4,
                           median = 1.8),
             aes(image = "naso.png"),
             size = 0.30) +
  geom_image(data = tibble(Depth_band = 4,
                           median = 1.4),
             aes(image = "siganid.png"),
             size = 0.30)
```

# pairwise

```{r}
abun_mod |> 
emmeans(~ Depth_band,
        type = "link") |>
  pairs(reverse = TRUE) |> 
  gather_emmeans_draws() |> # odds-ratio
  mutate(.value = exp(.value)) |> # log odds-ratio  
  summarise(median_hdci(.value),
            Pl = mean(.value < 1),
            Pg = mean(.value > 1))#,
            #.width = c(0.85, 0.95))
```
