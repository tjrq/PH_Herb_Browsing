---
title: "Abundance_fits"
format: html
editor: visual
---

# Libraries

```{r}
#| label: libraries
#| output: false
#| eval: true
#| warning: false
#| message: false
#| cache: false

library(tidyverse)
#library(rstanarm)
library(brms)
library(coda)
library(bayesplot)
library(DHARMa)
library(emmeans)
library(broom)
library(tidybayes)
library(ggeffects)
library(broom.mixed)
library(bayestestR)
library(see)
library(easystats)
library(patchwork)
library(ggridges)
source("helperFunctions.R")
library(ggimage)
library(vegan)
library(BiodiversityR)
library(ggrepel)
```

# read data

```{r}
brow_abun <- read_csv("Data/abundance_MaxN.csv",
               trim_ws = TRUE)

glimpse(brow_abun)
```

# prep data

```{r}
brow_abun_v2 <- 
  brow_abun |> 
  select(Site,
         Depth_band,
         Species,
         Functional_group,
         MaxN) |> 
  filter(Functional_group == "Browser" | 
         Functional_group == "None") |> # keep zeroes for analysis
  mutate(Site = factor(Site),
         Depth_band = as.character(Depth_band)) |> 
  mutate(Depth_band = recode(Depth_band,
                             "10" = "10m",
                             "20" = "20m",
                             "30" = "30m",
                             "50" = "50m"))

glimpse(brow_abun_v2)
#hist(brow_abun_v2$MaxN)
```

# model formula (negbinomial)

```{r}
abun_form <- bf(MaxN ~ Depth_band +
                  (1 | Site),
                family = negbinomial(link = "log"))
```

# get prior

```{r}
get_prior(abun_form, 
          data = brow_abun_v2)
# b, intercept, sd, shape
```

# view data

```{r}
brow_abun_v2 |> 
  group_by(Depth_band,
           Site) |> 
  summarise(median = median(MaxN),
            mad = mad(MaxN))
```

# weakly informative priors

```{r}
abun_prior <- prior(normal(1, 1.5), class = "Intercept") +
  prior(normal(0, 1.5), class = "b") +
  prior(student_t(3, 0, 1.5), class = "sd") +
  prior(gamma(0.01, 0.01), class = "shape")
```

# prior model

```{r}
#| cache: true
abun_prior_mod <- brm(abun_form,
                    data = brow_abun_v2,
                    prior = abun_prior,
                    sample_prior = "only",
                    iter = 5000,
                    warmup = 1000,
                    chains = 3,
                    cores = 6,
                    thin = 5,
                    refresh = 1000,
                    control = list(adapt_delta = 0.99,
                                   max_treedepth = 20))
```

# eval prior model

```{r}
abun_prior_mod |> conditional_effects() |> 
  plot(points = TRUE,
       ask = FALSE,
       plot = FALSE) |> 
  wrap_plots() &
  scale_y_log10()
```

# fit data to model

```{r}
#| cache: true
abun_mod <- update(abun_prior_mod ,
                  sample_prior = "yes",
                    iter = 10000,
                    warmup = 2000,
                    refresh = 2000)
```

# chain checks

```{r}
# trace
abun_mod |> mcmc_plot(type = "trace")
# autocor
abun_mod |> mcmc_plot(type = "acf_bar")
# rhat
abun_mod |> mcmc_plot(type = "rhat_hist")
# ess
abun_mod |> mcmc_plot(type = "neff_hist")
```

# residuals

```{r}
# resids
abun_resids <- make_brms_dharma_res(abun_mod)
# qqplot
abun_resids |> testUniformity() # not too bad
# resid plot
abun_resids |> plotResiduals() # not too bad
# dispersion
abun_resids |> testDispersion()
```
